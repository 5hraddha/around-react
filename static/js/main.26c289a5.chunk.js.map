{"version":3,"sources":["images/logo.svg","components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","components/Footer.js","components/App.js","index.js"],"names":["Header","className","src","pageLogo","alt","options","_checkResponseStatus","response","ok","json","Promise","reject","status","statusText","getInitialCards","fetch","_baseUrl","headers","_headers","then","addNewCard","cardName","cardPicUrl","method","body","JSON","stringify","name","link","deleteCard","cardId","likeCard","unlikeCard","getUserData","updateUserData","title","subtitle","about","updateUserAvatar","newAvatarUrl","avatar","this","baseUrl","authorization","Card","props","card","onCardClick","onClick","type","likes","length","_id","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","onEditProfileClick","onAddPlaceClick","onEditAvatarClick","useEffect","api","res","catch","err","console","log","map","PopupWithForm","children","onClose","btnLabel","isOpen","action","noValidate","ImagePopup","Footer","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","id","placeholder","required","minLength","maxLength","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26c289a5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3755f99c.svg\";","import React        from 'react';\nimport pageLogo     from '../images/logo.svg';\n\n/**\n * The **Header** component representing the header of the webpage\n *\n * @version 0.0.1\n * @author [Shraddha](https://github.com/5hraddha)\n */\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img className=\"logo\" src={pageLogo} alt=\"logo of the webpage having text around the US\" />\n    </header>\n  );\n}\n\nexport default Header;","/**\n * This module takes care of all the requests made to the API - https://around.nomoreparties.co\n * @module Api\n */\n\n/** Class representing all the API related requests */\nclass Api {\n  /**\n   * Sets the base URL and header authorization token for the API endpoints.\n   * @param {options} obj - An object having the base URL and headers\n   */\n  constructor(options){\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  /**\n   * Checks the server's response of the Fetch API call to tell whether it was successful or not.\n   * @param {Object} response The response of the Fetch API call.\n   * @return {Object} If the response was successful, returns the JSON else a Promise object with a given reason.\n   */\n  _checkResponseStatus = response => {\n    return (response.ok)\n      ? response.json()\n      : Promise.reject(`Error Code: ${response.status} | Error Msg: ${response.statusText}`);\n  }\n\n  /**\n   * Get initial image cards from the server using a GET request.\n   * @return {Promise} The Promise of the Fetch API call.\n   */\n  getInitialCards = () => {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    })\n      .then(this._checkResponseStatus);\n  }\n\n  /**\n   * Adds a new image card to the server using a POST request.\n   * @param {string} cardName The name of the place in the new image card.\n   * @param {string} cardPicUrl The URL of the picture in the new image card.\n   * @return {Promise} The Promise of the Fetch API call.\n   */\n  addNewCard = (cardName, cardPicUrl) => {\n    return fetch(`${this._baseUrl}/cards`,{\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardName,\n        link: cardPicUrl\n      })\n    })\n      .then(this._checkResponseStatus);\n  }\n\n  /**\n   * Deletes an existing image card from the server using a DELETE request.\n   * @param {string} cardId The id of image card to be deleted.\n   * @return {Promise} The Promise of the Fetch API call.\n   */\n  deleteCard = cardId => {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    })\n      .then(this._checkResponseStatus);\n  }\n\n  /**\n   * Likes an existing image card from the server using a PUT request.\n   * @param {string} cardId The id of image card to be liked.\n   * @return {Promise} The Promise of the Fetch API call.\n   */\n  likeCard = cardId => {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers\n    })\n      .then(this._checkResponseStatus);\n  }\n\n  /**\n   * Unlikes a liked image card from the server using a DELETE request.\n   * @param {string} cardId The id of image card to be unliked.\n   * @return {Promise} The Promise of the Fetch API call.\n   */\n  unlikeCard = cardId => {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    })\n      .then(this._checkResponseStatus);\n  }\n\n  /**\n   * Get the current user data from the server using a GET request.\n   * @return {Promise} The Promise of the Fetch API call.\n   */\n  getUserData = () => {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    })\n      .then(this._checkResponseStatus);\n  }\n\n  /**\n   * Updates the current user data from the server using a PATCH request.\n   * @param {string} title The new title or name of the current user.\n   * @param {string} subtitle The new subtitle or about info of the current user.\n   * @return {Promise} The Promise of the Fetch API call.\n   */\n  updateUserData = (title, subtitle) => {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: title,\n        about: subtitle\n      })\n    })\n      .then(this._checkResponseStatus);\n  }\n\n  /**\n   * Updates the current user's avatar from the server using a PATCH request.\n   * @param {string} newAvatarUrl The new URL of the user avatar.\n   * @return {Promise} The Promise of the Fetch API call.\n   */\n  updateUserAvatar = newAvatarUrl => {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: newAvatarUrl\n      })\n    })\n      .then(this._checkResponseStatus);\n  }\n}\n\nexport default new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-12\",\n  headers: {\n    authorization: \"9bc9c0f1-5a8a-40aa-b985-20e7b24d1389\",\n    \"Content-Type\": \"application/json\"\n  }\n});","import React      from 'react';\nimport PropTypes  from 'prop-types';\n\n/**\n * The **Card** component representing an image card in the webpage\n *\n * @version 0.0.1\n * @author [Shraddha](https://github.com/5hraddha)\n */\nfunction Card(props){\n  const { card, onCardClick } = props;\n  const handleClick = () => onCardClick(card);\n\n  return (\n    <li className=\"element\" key={card._id}>\n      <img className=\"element__img\" src={card.link} alt={card.name} onClick={handleClick} />\n      <div className=\"element__text\">\n        <h2 className=\"element__title\">{card.name}</h2>\n        <div className=\"element__likes\">\n          <button className=\"element__like-btn\" type=\"button\" aria-label=\"Like Image\"></button>\n          <p className=\"element__like-count\">{card.likes.length}</p>\n        </div>\n      </div>\n      <button className=\"element__delete-btn\" type=\"button\" aria-label=\"Delete Image\"></button>\n    </li>\n  );\n}\n\nCard.propTypes = {\n  /** An *object* having single card data returned from the *API* */\n  card        : PropTypes.object.isRequired,\n  /** A *callback function* that handles click event on the image card */\n  onCardClick : PropTypes.func.isRequired,\n};\n\nexport default Card;","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport api          from '../utils/api';\nimport Card         from './Card';\n\n/**\n * The **Main** component representing the main content of the webpage.\n *\n * @version 0.0.1\n * @author [Shraddha](https://github.com/5hraddha)\n */\nfunction Main(props) {\n  const [userName, setUserName]                   = React.useState('');\n  const [userDescription, setUserDescription]     = React.useState('');\n  const [userAvatar, setUserAvatar]               = React.useState('');\n  const [cards, setCards]                         = React.useState([]);\n\n  const {\n    onEditProfileClick,\n    onAddPlaceClick,\n    onEditAvatarClick,\n    onCardClick\n  } = props;\n\n  React.useEffect(() => {\n    api.getUserData()\n      .then(res => {\n        setUserName(res.name);\n        setUserDescription(res.about);\n        setUserAvatar(res.avatar);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  React.useEffect(() => {\n    api.getInitialCards()\n      .then(setCards)\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <main className=\"content\">\n      {/* section containing user info, functionality to edit it and to add new images */}\n      <section className=\"profile\">\n        <div className=\"profile__avatar-container\">\n          <img className=\"profile__avatar\" src={userAvatar} alt=\"profile avatar\" />\n          <button\n                  className=\"profile__avatar-update-button\"\n                  type=\"button\"\n                  aria-label=\"Update Profile Picture\"\n                  onClick={onEditAvatarClick}>\n          </button>\n        </div>\n        <div className=\"profile__info\">\n          <div className=\"profile__main-content\">\n            <h1 className=\"profile__title\">{userName}</h1>\n            <button\n                    className=\"profile__edit-btn\"\n                    type=\"button\"\n                    aria-label=\"Edit Profile\"\n                    onClick={onEditProfileClick}>\n            </button>\n          </div>\n          <p className=\"profile__subtitle\">{userDescription}</p>\n        </div>\n        <button\n                className=\"profile__add-btn\"\n                type=\"button\"\n                aria-label=\"Add Image\"\n                onClick={onAddPlaceClick}>\n        </button>\n      </section>\n\n      {/* section containing all the cards having images and functionality to like/unlike */}\n      <section>\n        <ul className=\"elements\">\n          {cards.map(card => <Card key={card._id} card={card} onCardClick={onCardClick} />)}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nMain.propTypes = {\n  /** A *callback function* that handles click on edit profile button */\n  onEditProfileClick: PropTypes.func.isRequired,\n  /** A *callback function* that handles click on add new place button */\n  onAddPlaceClick   : PropTypes.func.isRequired,\n  /** A *callback function* that handles click on edit avatar button */\n  onEditAvatarClick : PropTypes.func.isRequired,\n  /** A *callback function* that handles click on image card */\n  onCardClick       : PropTypes.func.isRequired,\n}\n\nexport default Main;","import React      from 'react';\nimport PropTypes  from 'prop-types';\n\n/**\n * The **PopupWithForm** component representing a popup with a form in it\n *\n * @version 0.0.1\n * @author [Shraddha](https://github.com/5hraddha)\n */\nfunction PopupWithForm(props) {\n  const { children } = props;\n  const { onClose } = props;\n  const { name, title, btnLabel, isOpen } = props;\n\n  return (\n    <div className={`popup popup_rel_${name} ${isOpen && 'popup_opened'}`}>\n    <div className=\"popup__container\">\n      <form className=\"popup__form\" name={name} action=\"#\" noValidate>\n        <h2 className=\"popup__title\">{title}</h2>\n        {children}\n        <button\n                className=\"popup__submit\"\n                type=\"submit\"\n                aria-label={`${btnLabel} ${name}`}>\n          {btnLabel}\n        </button>\n      </form>\n      <button\n              className=\"popup__close-btn\"\n              type=\"button\"\n              aria-label=\"Close popup\"\n              onClick={onClose}>\n      </button>\n    </div>\n  </div>\n  );\n}\n\nPopupWithForm.propTypes = {\n  /** Any form elements like input, label, etc */\n  children  : PropTypes.any,\n  /** A *callback function* that handles closing of the popup */\n  onClose   : PropTypes.func.isRequired,\n  /** A string representing the **name of the form** */\n  name      : PropTypes.string.isRequired,\n  /** A string representing the **title of the form** */\n  title     : PropTypes.string.isRequired,\n  /** A string representing the **label** of the Submit button */\n  btnLabel  : PropTypes.string.isRequired,\n  /** A boolean indicating if the popup is open or closed */\n  isOpen    : PropTypes.bool,\n}\n\nexport default PopupWithForm;","import React      from 'react';\nimport PropTypes  from 'prop-types';\n\n/**\n * The **ImagePopup** component representing image preview popup\n *\n * @version 0.0.1\n * @author [Shraddha](https://github.com/5hraddha)\n */\nfunction ImagePopup(props) {\n  const {card, onClose} = props;\n  return (\n    <div className={`popup popup_rel_image ${card && 'popup_opened'}`}>\n      <div className=\"popup__container popup__container_rel_image\">\n        <figure className=\"popup__figure\">\n          <img className=\"popup__img\" src={`${card && card.link}`} alt={`${card && card.name}`} />\n          <figcaption className=\"popup__caption\">{`${card && card.name}`}</figcaption>\n        </figure>\n        <button\n                className=\"popup__close-btn popup__close-btn_rel_image\"\n                type=\"button\"\n                onClick={onClose}\n                aria-label=\"Close popup\">\n        </button>\n      </div>\n    </div>\n  );\n}\n\nImagePopup.propTypes = {\n  /** An *object* having selected card data */\n  card    : PropTypes.object,\n  /** A *callback function* that handles closing of the popup */\n  onClose : PropTypes.func.isRequired,\n}\n\nexport default ImagePopup;","import React from 'react';\n\n/**\n * The **Footer** component representing the footer of the webpage\n *\n * @version 0.0.1\n * @author [Shraddha](https://github.com/5hraddha)\n */\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__text\">© 2021 Around The U.S.</p>\n    </footer>\n  );\n}\n\nexport default Footer;","import React            from 'react';\nimport Header           from './Header';\nimport Main             from './Main';\nimport PopupWithForm    from './PopupWithForm';\nimport ImagePopup       from './ImagePopup';\nimport Footer           from './Footer';\n\n/**\n * The main React **App** component.\n *\n * @version 0.0.1\n * @author [Shraddha](https://github.com/5hraddha)\n */\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen]   = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen]         = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen]     = React.useState(false);\n  const [selectedCard, setSelectedCard]                       = React.useState(null);\n\n  const handleEditProfileClick = () => setIsEditProfilePopupOpen(true);\n  const handleAddPlaceClick = () => setIsAddPlacePopupOpen(true);\n  const handleEditAvatarClick = () => setIsEditAvatarPopupOpen(true);\n  const handleCardClick = card => setSelectedCard(card);\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"page__wrapper\">\n        {/* page header */}\n        <Header />\n\n        {/* main content of the page */}\n        <Main\n          onEditProfileClick={handleEditProfileClick}\n          onAddPlaceClick={handleAddPlaceClick}\n          onEditAvatarClick={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n        />\n\n        {/* page footer */}\n        <Footer />\n\n        {/* update avatar popup box */}\n        <PopupWithForm\n          name=\"avatar\"\n          title=\"Change Profile Picture\"\n          btnLabel=\"Save\"\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}>\n          <input\n            className=\"popup__input\"\n            type=\"url\"\n            id=\"avatarlink-input\"\n            name=\"avatarlink\"\n            placeholder=\"Image link\"\n            required />\n          <span id=\"avatarlink-input-error\" className=\"popup__error\"></span>\n        </PopupWithForm>\n\n        {/* edit profile popup box */}\n        <PopupWithForm\n          name=\"profile\"\n          title=\"Edit profile\"\n          btnLabel=\"Save\"\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}>\n          <input\n            className=\"popup__input\"\n            type=\"text\"\n            id=\"name-input\"\n            name=\"title\"\n            placeholder=\"Name\"\n            minLength=\"2\"\n            maxLength=\"40\"\n            required />\n          <span id=\"name-input-error\" className=\"popup__error\"></span>\n          <input\n            className=\"popup__input\"\n            type=\"text\"\n            id=\"about-input\"\n            name=\"subtitle\"\n            placeholder=\"About me\"\n            minLength=\"2\"\n            maxLength=\"200\"\n            required />\n          <span id=\"about-input-error\" className=\"popup__error\"></span>\n        </PopupWithForm>\n\n        {/* add place popup box */}\n        <PopupWithForm\n          name=\"place\"\n          title=\"New Place\"\n          btnLabel=\"Create\"\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}>\n          <input\n            className=\"popup__input\"\n            type=\"text\"\n            id=\"place-input\"\n            name=\"name\"\n            placeholder=\"Title\"\n            minLength=\"1\"\n            maxLength=\"30\"\n            required />\n          <span id=\"place-input-error\" className=\"popup__error\"></span>\n          <input\n            className=\"popup__input\"\n            type=\"url\"\n            id=\"link-input\"\n            name=\"link\"\n            placeholder=\"Image link\"\n            required />\n          <span id=\"link-input-error\" className=\"popup__error\"></span>\n        </PopupWithForm>\n\n        {/* view image popup box */}\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n\n        {/* confirm delete image card popup box */}\n        <PopupWithForm name=\"delete\" title=\"Are you sure?\" btnLabel=\"Yes\" onClose={closeAllPopups} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}